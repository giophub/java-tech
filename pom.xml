<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.giophub</groupId>
    <artifactId>java-tech</artifactId>
    <packaging>war</packaging>
    <version>0.0.1</version>
    <name>${project.artifactId}</name>
    <description>Java technologies</description>

    <!-- PROPERTIES -->
    <properties>
        <project.encoding>UTF-8</project.encoding>
        <java.version>1.8</java.version>
        <jersey2.version>2.19</jersey2.version>
        <jaxrs.version>2.0.1</jaxrs.version>
        <spring.version>5.2.22.RELEASE</spring.version>

        <!-- build default settings -->
        <!--<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>-->
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyyMMdd</maven.build.timestamp.format>
        <Implementation-Build>${buildNumber}</Implementation-Build>
    </properties>


    <profiles>
        <!-- LocalHost Dev Env -->
        <profile>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <id>Development</id>
            <properties>
                <build.name>${project.name}</build.name>

                <!-- deployment settings -->
                <profile.env>Development</profile.env>

                <!-- log settings -->
                <log.directory.val>${project.basedir}/_logs</log.directory.val>
                <log.level.val>DEBUG</log.level.val>
                <log.max.index.val>200</log.max.index.val>
                <log.max.size.val>5MB</log.max.size.val>
            </properties>
        </profile>

    </profiles>


    <!-- BUILD -->
    <build>
        <!-- fileName: myProject-DEV-0.8.5-3d93da79ab56b75d-20180604 -->
        <finalName>${build.name}</finalName>

        <sourceDirectory>${project.basedir}/src/main/java/</sourceDirectory>
        <resources>
            <resource> <!-- FILTERED RESOURCES -->
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>filtered/**/*</include>
                </includes>
            </resource>
            <resource> <!-- STATIC RESOURCES -->
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>static/**/*</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <!-- build number from git-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <id>buildnumber</id>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!--<format>{0}-{1}</format>-->
                    <format>{0}</format>
                    <items>
                        <item>scmVersion</item>
                        <item>buildNumber</item>
                    </items>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                    <revisionOnScmFailure>no-scm-rev</revisionOnScmFailure>
                    <shortRevisionLength>16</shortRevisionLength>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <encoding>${project.encoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.encoding}</encoding>
                </configuration>
            </plugin>
            <!-- de-lombok-->
            <plugin>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-maven-plugin</artifactId>
                <version>1.18.4.0</version>
                <configuration>
                    <encoding>${project.encoding}</encoding>
                </configuration>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>delombok</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Build an executable WAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <warSourceDirectory>src/main/webapp</warSourceDirectory>
                    <webResources>
                        <webResource>
                            <directory>jsonpages</directory>
                            <filtering>true</filtering>
                        </webResource>
                    </webResources>
                </configuration>
            </plugin>
            <!-- Build an executable JAR -->
            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.giophub.main.Main</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            &lt;!&ndash; buil jar with maven dependencies &ndash;&gt;
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.giophub.main.Main</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>-->

            <!-- create stub classes from the WSDL -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxws-maven-plugin</artifactId>
                <version>2.5</version>

                <dependencies>
                    <dependency>
                        <groupId>org.jvnet.jaxb2_commons</groupId>
                        <artifactId>jaxb2-fluent-api</artifactId>
                        <version>3.0</version>
                    </dependency>
                    <dependency>
                        <groupId>com.sun.xml.ws</groupId>
                        <artifactId>jaxws-tools</artifactId>
                        <version>2.3.2</version>
                    </dependency>
                </dependencies>

                <executions>
                    <execution>
                        <goals>
                            <!-- run: jaxws:wsimport during the mvn clean package/install phase-->
                            <!--<goal>wsimport</goal>-->
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <!-- Use the wsdl from an url. Note that the service must to be up & running ! -->
                    <wsdlUrls>
                        <wsdlLocation>http://localhost:8081/JaxWsSoapService?wsdl</wsdlLocation>
                    </wsdlUrls>
                    <!-- Or use wsdls file directory -->
                    <!--<wsdlDirectory>${project.basedir}/src/main/resources/app.settings/wsdl</wsdlDirectory>
                    <wsdlFiles>&lt;!&ndash; which wsdl file &ndash;&gt;
                        <wsdlFile>jaxws-service.wsdl</wsdlFile>
                    </wsdlFiles>-->
                    <packageName>com.giophub.soap.jaxws.client.stub</packageName>
                    <xjcArgs>
                        <xjcArg>-Xfluent-api</xjcArg>
                    </xjcArgs>
                    <verbose>true</verbose>
                    <keep>true</keep> <!--used by default-->
                    <sourceDestDir>${project.build.sourceDirectory}</sourceDestDir>
                </configuration>
            </plugin>

            <plugin>
                <!--
                    to run in maven: mvn tomcat7:run
                    and then eith the browser go to: http://localhost:8080/ -->
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <url>http://localhost:8080/manager</url>
                    <path>/</path>
                    <!--<path>/${build.name}</path>-->
                </configuration>
            </plugin>

            <!-- SPOCK FRAMEWORK PLUGINS -->
            <plugin>
                <!-- The gmavenplus plugin is used to compile Groovy code. To learn more about this plugin,
                visit https://github.com/groovy/GMavenPlus/wiki -->
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>1.6.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compileTests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Optional plugins for using Spock -->
            <!-- Only required if names of spec classes don't match default Surefire patterns (`*Test` etc.) -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.21.0</version>
                <configuration>
                    <useFile>false</useFile>
                    <includes>
                        <include>**/*Spec.java</include>
                        <include>**/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>
            <!-- END SPOCK FRAMEWORK PLUGINS -->
        </plugins>

        <!--<pluginManagement>
            <plugins>
                &lt;!&ndash; SPOCK FRAMEWORK PLUGINS &ndash;&gt;
                <plugin>
                    &lt;!&ndash; The gmavenplus plugin is used to compile Groovy code. To learn more about this plugin,
                    visit https://github.com/groovy/GMavenPlus/wiki &ndash;&gt;
                    <groupId>org.codehaus.gmavenplus</groupId>
                    <artifactId>gmavenplus-plugin</artifactId>
                    <version>1.4</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                &lt;!&ndash; Optional plugins for using Spock &ndash;&gt;
                &lt;!&ndash; Only required if names of spec classes don't match default Surefire patterns (`*Test` etc.) &ndash;&gt;
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.6</version>
                    <configuration>
                        <useFile>false</useFile>
                        <includes>
                            <include>**/*Spec.java</include>
                            <include>**/*Test.java</include>
                        </includes>
                    </configuration>
                </plugin>
                &lt;!&ndash; END SPOCK FRAMEWORK PLUGINS &ndash;&gt;
            </plugins>
        </pluginManagement>-->
    </build>


    <!-- DEPENDENCIES -->
    <dependencies>
        <!-- SOURCE LIBRARIES -->

        <!-- LOGGER -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.26</version>
        </dependency>
        <!-- Binding for logBack -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>
        <!-- Anything using commons-logging should defer to slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.26</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
        </dependency>

        <!-- COMMONS -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.8.1</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.6</version>
            <scope>provided</scope>
        </dependency>
        <!-- JSON utils -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.5</version>
        </dependency>
        <!-- XML utils-->
        <dependency>
            <groupId>org.jdom</groupId>
            <artifactId>jdom</artifactId>
            <version>2.0.2</version>
        </dependency>


        <!-- WEB -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
        </dependency>
        <!-- Apache commons : HTTP Client -->
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.8</version>
        </dependency>


        <!-- JAX-RS -->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>${jaxrs.version}</version>
        </dependency>
        <!-- Jersey 2.19 -->
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>${jersey2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey2.version}</version>
        </dependency>
        <dependency>
            <!-- Required only when you are using JAX-RS Client -->
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey2.version}</version>
        </dependency>
        <dependency>
            <!-- needed for MediaType.APPLICATION_JSON !! -->
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-moxy</artifactId>
            <version>${jersey2.version}</version>
        </dependency>
        <!--<dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>2.28</version>
        </dependency>-->


        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency> <!-- quartz scheduler -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>


        <!-- TESTING LIBRARIES -->

        <!-- JUNIT -->
        <!--<dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>-->


        <!-- SPOCK FRAMEWORK DEPENDENCIES -->
        <!-- Versions of the following dependencies should be omitted if using
        spring-boot-starter-parent -->
        <!--<dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-spring</artifactId>
            <version>1.3-groovy-2.5</version>
            <scope>test</scope>
        </dependency>-->
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <version>1.3-groovy-2.5</version>
            <scope>test</scope>
        </dependency>
        <dependency> <!-- use a specific Groovy version rather than the one specified by spock-core -->
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>2.4.16</version>
        </dependency>
        <dependency> <!-- to test RESTClient -->
            <groupId>org.codehaus.groovy.modules.http-builder</groupId>
            <artifactId>http-builder</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>groovy</artifactId>
                    <groupId>org.codehaus.groovy</groupId>
                </exclusion>
            </exclusions>
            <version>0.7.1</version>
        </dependency>

        <!-- end SPOCK FRAMEWORK DEPENDENCIES -->
    </dependencies>


    <scm>
        <url>https://github.com/giophub/maven-kickstart.git</url>
        <connection>scm:git:${project.scm.url}</connection>
        <developerConnection>${project.scm.connection}</developerConnection>
    </scm>


    <repositories>
        <repository>
            <id>central.maven.org</id>
            <name>Central Maven repository</name>
            <url>http://central.maven.org/maven2/</url>
            <layout>default</layout>
        </repository>
        <repository>
            <id>maven2-repository.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>
            <layout>default</layout>
        </repository>
    </repositories>
</project>
